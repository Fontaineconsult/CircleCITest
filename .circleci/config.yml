# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
# Orchestrate or schedule a set of jobs

commands:
  print_pipeline_id:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

jobs:
  create_aws_env:
    parameters:
      stack-name:
        default: circle-ci-stack
        type: string
      aws-access-key-id:
        default: $AWS_ACCESS_KEY_ID
        type: string
      aws-region:
        default: us-west-2
        type: string
      aws-secret-access-key:
        default: $AWS_SECRET_ACCESS_KEY
        type: string
      profile-name:
        default: udacity
        type: string
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: config CLI
          command: export AWS_ACCESS_KEY_ID=<< parameters.aws-access-key-id >> && export AWS_SECRET_ACCESS_KEY=<< parameters.aws-secret-access-key >> && export AWS_DEFAULT_REGION=<< parameters.aws-region >>
      - run:
          name: take a look
          command: ls
      - run:
          name: Deploy Stack
          command: aws cloudformation create-stack --stack-name << parameters.stack-name >> --template-body=file://aws_test.yaml  --region=us-west-2 --capabilities CAPABILITY_NAMED_IAM

      - run:
          name: Create Inventory.txt
          command: echo [All] >> inventory.txt

      - run:
          name: Get IPS
          command: aws ec2 describe-instances --region=us-west-2 --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> inventory.txt
      - run:
          name: Take a look
          command: ls && cat inventory.txt

      - save_cache:
          key: inventory
          paths:
            - inventory.txt

  create_ansible_env:
    parameters:
      ansible-key-checking:
        default: False
        type: boolean
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
           - "42:92:62:d5:3e:0b:48:52:4d:ba:39:70:ac:0c:09:eb"
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: disable ansible key checking
          command: export ANSIBLE_HOST_KEY_CHECKING=False
      - restore_cache:
          keys:
            - inventory
      - run:
          name: Take a look
          command: ls && cat inventory.txt
      - run:
          name: Config server
          command: |
            ansible-playbook -i inventory.txt main.yml

workflows:
  my_workflow:
    jobs:
     - create_aws_env
     - create_ansible_env:
         requires:
           - create_aws_env

